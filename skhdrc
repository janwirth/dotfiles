#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <keysym> ':' <command> |
#                                  <keysym> '->' ':' <command>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.


# open terminal, blazingly fast compared to iTerm/Hyper
# cmd - return : open -na /Applications/Kitty.app
cmd - return : osascript -e 'tell application "Terminal to activate' -e 'tell application "System Events" to tell process "Terminal" to keystroke "n" using command down'

# close focused window
fn - w : chunkc tiling::window --close

# focus window
fn - h : chunkc tiling::window --focus west
fn - j : chunkc tiling::window --focus south
fn - k : chunkc tiling::window --focus north
fn - l : chunkc tiling::window --focus east

cmd - j : chunkc tiling::window --focus prev
cmd - k : chunkc tiling::window --focus next

# equalize size of windows
# shift + fn - 0 : chunkc tiling::desktop --equalize

# swap window
# shift + fn - h : chunkc tiling::window --swap west
# shift + fn - j : chunkc tiling::window --swap south
# shift + fn - k : chunkc tiling::window --swap north
# shift + fn - l : chunkc tiling::window --swap east

# move window
# shift + cmd - h : chunkc tiling::window --warp west
# shift + cmd - j : chunkc tiling::window --warp south
# shift + cmd - k : chunkc tiling::window --warp north
# shift + cmd - l : chunkc tiling::window --warp east

# make floating window fill screen
# shift + fn - up     : chunkc tiling::window --grid-layout 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + fn - left   : chunkc tiling::window --grid-layout 1:2:0:0:1:1

# make floating window fill right-half of screen
# shift + fn - right  : chunkc tiling::window --grid-layout 1:2:1:0:1:1

# send window to desktop
# shift + fn - x : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
# shift + fn - z : chunkc tiling::window --send-to-desktop prev
# shift + fn - c : chunkc tiling::window --send-to-desktop next
# shift + fn - 1 : chunkc tiling::window --send-to-desktop 1
# shift + fn - 2 : chunkc tiling::window --send-to-desktop 2
# shift + fn - 3 : chunkc tiling::window --send-to-desktop 3
# shift + fn - 4 : chunkc tiling::window --send-to-desktop 4
# shift + fn - 5 : chunkc tiling::window --send-to-desktop 5
# shift + fn - 6 : chunkc tiling::window --send-to-desktop 6

# focus monitor
fn + ctrl - z  : chunkc tiling::monitor -f prev
fn + ctrl - c  : chunkc tiling::monitor -f next
fn + ctrl - 1  : chunkc tiling::monitor -f 1
fn + ctrl - 2  : chunkc tiling::monitor -f 2
fn + ctrl - 3  : chunkc tiling::monitor -f 3

# send window to monitor and follow focus
ctrl + cmd - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
ctrl + cmd - c  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
ctrl + cmd - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
ctrl + cmd - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
ctrl + cmd - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
# shift + fn - a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
# shift + fn - s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
# shift + fn - w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
# shift + fn - d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
# shift + cmd - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
# shift + cmd - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
# shift + cmd - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
# shift + cmd - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# set insertion point for focused container
fn + ctrl - f : chunkc tiling::window --use-insertion-point cancel
fn + ctrl - h : chunkc tiling::window --use-insertion-point west
fn + ctrl - j : chunkc tiling::window --use-insertion-point south
fn + ctrl - k : chunkc tiling::window --use-insertion-point north
fn + ctrl - l : chunkc tiling::window --use-insertion-point east

# rotate tree
fn - r : chunkc tiling::desktop --rotate 90

# mirror tree y-axis
fn - y : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
fn - x : chunkc tiling::desktop --mirror horizontal

# toggle desktop offset
fn - a : chunkc tiling::desktop --toggle offset

# toggle window fullscreen
# 0x38 - f : chunkc tiling::window --toggle fullscreen
# fn - f : chunkc tiling::window --toggle fullscreen
shift - 0x0A: chunkc tiling::window --toggle fullscreen


# toggle window native fullscreen
# shift + fn - f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
fn - d : chunkc tiling::window --toggle parent

# toggle window split type
fn - e : chunkc tiling::window --toggle split

# float / unfloat window and center on screen
fn - t : chunkc tiling::window --toggle float;\
          chunkc tiling::window --grid-layout 4:4:1:1:2:2

# toggle sticky, float and resize to picture-in-picture size
fn - s : chunkc tiling::window --toggle sticky;\
          chunkc tiling::window --grid-layout 5:5:4:0:1:1

# float next window to be tiled
# shift + fn - t : chunkc set window_float_next 1

# change layout of desktop
fn + ctrl - a : chunkc tiling::desktop --layout bsp
fn + ctrl - s : chunkc tiling::desktop --layout monocle
fn + ctrl - d : chunkc tiling::desktop --layout float

fn + ctrl - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_1

fn + ctrl - s : cd owvs-ui && npm start

ctrl - 1 : yabai -m window --toggle zoom-fullscreen
0x0A : alacritty